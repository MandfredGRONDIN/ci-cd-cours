name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Environnement de d√©ploiement'
        required: true
        default: 'develop'
        options:
          - Develop
          - Preproduction
          - Production

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16, 18, 20, 22]  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm run test

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: unit-tests 
    if: ${{ github.event.inputs.environment == 'production' }}  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: |
          mkdir ./dist
          npm run build  

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-project
          path: dist/

  deploy:
    name: Deploy Project
    runs-on: ubuntu-latest
    needs: build  
    if: ${{ github.event.inputs.environment == 'production' }}  
    steps:
      - name: Deploy to production
        run: |
          echo "Deploying to production server..."
